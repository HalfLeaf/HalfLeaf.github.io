{"remainingRequest":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-plugin-photo-swipe\\src\\PhotoSwipeUI.vue?vue&type=script&lang=ts&","dependencies":[{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-plugin-photo-swipe\\src\\PhotoSwipeUI.vue","mtime":499162500000},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592788438647},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592788438647},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1592788498951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogZ2xvYmFsIElNQUdFX0NPTlRBSU5FUiwgSU1BR0VfU0VMRUNUT1IsIFBIT1RPU1dJUEVfT1BUSU9OUyAqLwppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSwgV2F0Y2ggfSBmcm9tICJ2dWUtcHJvcGVydHktZGVjb3JhdG9yIjsKaW1wb3J0IFBob3RvU3dpcGUgPSByZXF1aXJlKCJwaG90b3N3aXBlIik7CmltcG9ydCBQaG90b1N3aXBlVUlEZWZhdWx0ID0gcmVxdWlyZSgicGhvdG9zd2lwZS9kaXN0L3Bob3Rvc3dpcGUtdWktZGVmYXVsdCIpOwoKbGV0IGltYWdlczogTm9kZUxpc3RPZjxIVE1MSW1hZ2VFbGVtZW50PjsKCkBDb21wb25lbnQKZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGhvdG9Td2lwZVVJIGV4dGVuZHMgVnVlIHsKICBwcml2YXRlIHBob3Rvc3dpcGUoKSB7CiAgICBjb25zdCBwc3dwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLnBzd3AiKSBhcyBIVE1MRWxlbWVudDsKCiAgICB0aGlzLmdldEltYWdlcygpLnRoZW4oKGltYWdlQ29uZmlnKSA9PiB7CiAgICAgIGltYWdlcy5mb3JFYWNoKChpbWFnZSwgaW5kZXgpID0+IHsKICAgICAgICBpbWFnZS5vbmNsaWNrID0gKCkgPT4gewogICAgICAgICAgY29uc3QgZ2FsbGVyeSA9IG5ldyBQaG90b1N3aXBlKAogICAgICAgICAgICBwc3dwLAogICAgICAgICAgICBQaG90b1N3aXBlVUlEZWZhdWx0LAogICAgICAgICAgICBpbWFnZUNvbmZpZywKICAgICAgICAgICAgewogICAgICAgICAgICAgIC4uLlBIT1RPU1dJUEVfT1BUSU9OUywKICAgICAgICAgICAgICBpbmRleCwKICAgICAgICAgICAgfQogICAgICAgICAgKTsKICAgICAgICAgIGdhbGxlcnkuaW5pdCgpOwogICAgICAgIH07CiAgICAgIH0pOwogICAgfSk7CiAgfQoKICBwcml2YXRlIGdldEltYWdlSW5mbyhpbWFnZTogSFRNTEltYWdlRWxlbWVudCkgewogICAgcmV0dXJuIHsKICAgICAgc3JjOiBpbWFnZS5zcmMsCiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpZC1sZW5ndGgKICAgICAgdzogaW1hZ2UubmF0dXJhbFdpZHRoLAogICAgICBoOiBpbWFnZS5uYXR1cmFsSGVpZ2h0LAogICAgICB0aXRsZTogaW1hZ2UuYWx0LAogICAgfTsKICB9CgogIHByaXZhdGUgZ2V0SW1hZ2VzKCkgewogICAgY29uc3QgcHJvbWlzZXM6IFByb21pc2U8UGhvdG9Td2lwZS5JdGVtPltdID0gW107CiAgICBpbWFnZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsPEhUTUxJbWFnZUVsZW1lbnQ+KElNQUdFX1NFTEVDVE9SKTsKCiAgICBpbWFnZXMuZm9yRWFjaCgoaW1hZ2UsIGluZGV4KSA9PiB7CiAgICAgIHByb21pc2VzW2luZGV4XSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICBpZiAoaW1hZ2UuY29tcGxldGUpIHJlc29sdmUodGhpcy5nZXRJbWFnZUluZm8oaW1hZ2UpKTsKICAgICAgICBlbHNlIHsKICAgICAgICAgIGltYWdlLm9ubG9hZCA9ICgpID0+IHJlc29sdmUodGhpcy5nZXRJbWFnZUluZm8oaW1hZ2UpKTsKICAgICAgICAgIGltYWdlLm9uZXJyb3IgPSAoZXJyKSA9PiByZWplY3QoZXJyKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSk7CgogICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTsKICB9CgogIHByaXZhdGUgbW91bnRlZCgpIHsKICAgIGNvbnN0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oCiAgICAgICAgSU1BR0VfQ09OVEFJTkVSCiAgICAgICk7CiAgICAgIGlmIChjb250ZW50KSB7CiAgICAgICAgdGhpcy5waG90b3N3aXBlKCk7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7CiAgICAgIH0KICAgIH0sIDIwMCk7CiAgfQoKICBAV2F0Y2goIiRyb3V0ZSIpCiAgb25Sb3V0ZUNoYW5nZSgpIHsKICAgIGNvbnN0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oCiAgICAgICAgSU1BR0VfQ09OVEFJTkVSCiAgICAgICk7CiAgICAgIGlmIChjb250ZW50KSB7CiAgICAgICAgdGhpcy5waG90b3N3aXBlKCk7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7CiAgICAgIH0KICAgIH0sIDIwMCk7CiAgfQp9Cg=="},{"version":3,"sources":["PhotoSwipeUI.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PhotoSwipeUI.vue","sourceRoot":"node_modules/vuepress-plugin-photo-swipe/src","sourcesContent":["<template>\n  <!-- Root element of PhotoSwipe. Must have class pswp. -->\n  <div class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <!-- Background of PhotoSwipe. \n    It's a separate element, as animating opacity is faster than rgba().-->\n    <div class=\"pswp__bg\" />\n\n    <!-- Slides wrapper with overflow:hidden. -->\n    <div class=\"pswp__scroll-wrap\">\n      <!-- Container that holds slides. PhotoSwipe keeps only 3 slides in DOM to save memory. -->\n      <div class=\"pswp__container\">\n        <!-- don't modify these 3 pswp__item elements, data is added later on -->\n        <div class=\"pswp__item\" />\n        <div class=\"pswp__item\" />\n        <div class=\"pswp__item\" />\n      </div>\n\n      <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\n      <div class=\"pswp__ui pswp__ui--hidden\">\n        <div class=\"pswp__top-bar\">\n          <!--  Controls are self-explanatory. Order can be changed. -->\n\n          <div class=\"pswp__counter\" />\n\n          <button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\" />\n\n          <button class=\"pswp__button pswp__button--share\" title=\"Share\" />\n\n          <button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\" />\n\n          <button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\" />\n\n          <!-- Preloader demo https://codepen.io/dimsemenov/pen/yyBWoR -->\n          <!-- element will get class pswp__preloader--active when preloader is running -->\n          <div class=\"pswp__preloader\">\n            <div class=\"pswp__preloader__icn\">\n              <div class=\"pswp__preloader__cut\">\n                <div class=\"pswp__preloader__donut\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\n          <div class=\"pswp__share-tooltip\" />\n        </div>\n\n        <button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\" />\n\n        <button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\" />\n\n        <div class=\"pswp__caption\">\n          <div class=\"pswp__caption__center\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n/* global IMAGE_CONTAINER, IMAGE_SELECTOR, PHOTOSWIPE_OPTIONS */\nimport { Component, Vue, Watch } from \"vue-property-decorator\";\nimport PhotoSwipe = require(\"photoswipe\");\nimport PhotoSwipeUIDefault = require(\"photoswipe/dist/photoswipe-ui-default\");\n\nlet images: NodeListOf<HTMLImageElement>;\n\n@Component\nexport default class PhotoSwipeUI extends Vue {\n  private photoswipe() {\n    const pswp = document.querySelector(\".pswp\") as HTMLElement;\n\n    this.getImages().then((imageConfig) => {\n      images.forEach((image, index) => {\n        image.onclick = () => {\n          const gallery = new PhotoSwipe(\n            pswp,\n            PhotoSwipeUIDefault,\n            imageConfig,\n            {\n              ...PHOTOSWIPE_OPTIONS,\n              index,\n            }\n          );\n          gallery.init();\n        };\n      });\n    });\n  }\n\n  private getImageInfo(image: HTMLImageElement) {\n    return {\n      src: image.src,\n      // eslint-disable-next-line id-length\n      w: image.naturalWidth,\n      h: image.naturalHeight,\n      title: image.alt,\n    };\n  }\n\n  private getImages() {\n    const promises: Promise<PhotoSwipe.Item>[] = [];\n    images = document.querySelectorAll<HTMLImageElement>(IMAGE_SELECTOR);\n\n    images.forEach((image, index) => {\n      promises[index] = new Promise((resolve, reject) => {\n        if (image.complete) resolve(this.getImageInfo(image));\n        else {\n          image.onload = () => resolve(this.getImageInfo(image));\n          image.onerror = (err) => reject(err);\n        }\n      });\n    });\n\n    return Promise.all(promises);\n  }\n\n  private mounted() {\n    const timer = setInterval(() => {\n      const content = document.querySelector<HTMLElement>(\n        IMAGE_CONTAINER\n      );\n      if (content) {\n        this.photoswipe();\n        clearInterval(timer);\n      }\n    }, 200);\n  }\n\n  @Watch(\"$route\")\n  onRouteChange() {\n    const timer = setInterval(() => {\n      const content = document.querySelector<HTMLElement>(\n        IMAGE_CONTAINER\n      );\n      if (content) {\n        this.photoswipe();\n        clearInterval(timer);\n      }\n    }, 200);\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@require '~photoswipe/dist/photoswipe.css'\n@require '~photoswipe/dist/default-skin/default-skin.css'\n</style>\n"]}]}