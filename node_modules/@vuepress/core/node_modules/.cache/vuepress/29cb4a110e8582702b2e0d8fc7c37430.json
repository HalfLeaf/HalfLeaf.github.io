{"remainingRequest":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-theme-hope\\components\\ArticleList.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-theme-hope\\components\\ArticleList.vue","mtime":499162500000},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\css-loader\\dist\\cjs.js","mtime":1592788458817},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1592788498960},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\postcss-loader\\src\\index.js","mtime":1592788480096},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\stylus-loader\\index.js","mtime":1592788491948},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592788438647},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1592788498951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFydGljbGUtd3JhcHBlcgogIG1hcmdpbi10b3AgLSAkbmF2YmFySGVpZ2h0IC0gMC41cmVtCiAgcGFkZGluZy10b3AgJG5hdmJhckhlaWdodCArIDAuNXJlbQo="},{"version":3,"sources":["ArticleList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA","file":"ArticleList.vue","sourceRoot":"node_modules/vuepress-theme-hope/components","sourcesContent":["<template>\n  <div id=\"article\" class=\"article-wrapper\">\n    <MyTransition v-for=\"(article, index) in articles\" :key=\"article.path\" :delay=\"index * 0.04\">\n      <ArticleItem :article=\"article\" />\n    </MyTransition>\n    <!-- 分页 -->\n    <Pagination v-model=\"currentPage\" :per-page=\"articlePerPage\" :total=\"articleList.length\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Mixins, Vue, Watch } from \"vue-property-decorator\";\nimport ArticleItem from \"@theme/components/ArticleItem.vue\";\nimport { ArticleMixin } from \"../util/articleMixin\";\nimport MyTransition from \"@theme/components/MyTransition.vue\";\nimport Pagination from \"@mr-hope/vuepress-plugin-components/src/Pagination.vue\";\nimport { PageComputed } from \"@mr-hope/vuepress-types\";\nimport { Route } from \"vue-router\";\nimport { deepAssign } from \"@mr-hope/vuepress-shared-utils\";\nimport { generatePagination } from \"../util/article\";\n\n@Component({ components: { ArticleItem, MyTransition, Pagination } })\nexport default class ArticleList extends Mixins(ArticleMixin) {\n  /** 当前页面 */\n  private currentPage = 1;\n\n  /** 文章列表 */\n  private articleList: PageComputed[] = [];\n\n  /** 博客配置 */\n  private get blogConfig() {\n    return this.$themeConfig.blog || {};\n  }\n\n  /** 文章分页 */\n  private get $paginationArticles(): PageComputed[][] {\n    return generatePagination(this.$articles);\n  }\n\n  /** 每页文章数 */\n  private get articlePerPage() {\n    return this.blogConfig.perPage || 10;\n  }\n\n  /** 当前页面的文章 */\n  private get articles() {\n    return this.articleList.slice(\n      (this.currentPage - 1) * this.articlePerPage,\n      this.currentPage * this.articlePerPage\n    );\n  }\n\n  /** 更新文章列表 */\n  private getArticleList() {\n    try {\n      return this.$pagination ? this.$pagination._matchedPages : this.$articles;\n    } catch (err) {\n      return this.$articles;\n    }\n  }\n\n  private mounted() {\n    this.articleList = this.getArticleList();\n  }\n\n  /** 在路径发生改变时更新文章列表 */\n  @Watch(\"$route\")\n  private onRouteUpdate(to: Route, from: Route) {\n    if (to.path !== from.path) {\n      this.articleList = this.getArticleList();\n      // 将页面重置为 1\n      this.currentPage = 1;\n    }\n  }\n\n  @Watch(\"currentPage\")\n  private onPageChange() {\n    // 滚动到列表顶部\n    const distance =\n      (document.querySelector(\"#article\") as Element).getBoundingClientRect()\n        .top + window.scrollY;\n\n    setTimeout(() => {\n      window.scrollTo(0, distance);\n    }, 100);\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.article-wrapper\n  margin-top - $navbarHeight - 0.5rem\n  padding-top $navbarHeight + 0.5rem\n</style>\n"]}]}