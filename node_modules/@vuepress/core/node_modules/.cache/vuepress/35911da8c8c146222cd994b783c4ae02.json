{"remainingRequest":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-theme-hope\\components\\NavLinks.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-theme-hope\\components\\NavLinks.vue","mtime":499162500000},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\css-loader\\dist\\cjs.js","mtime":1592788458817},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1592788498960},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\postcss-loader\\src\\index.js","mtime":1592788480096},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\stylus-loader\\index.js","mtime":1592788491948},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592788438647},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1592788498951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5uYXYtbGlua3MKICBkaXNwbGF5IGlubGluZS1ibG9jawoKICAubmF2LWxpbmsKICAgIGxpbmUtaGVpZ2h0IDEuNHJlbQogICAgY29sb3IgdmFyKC0tZGFyay1ncmV5KQoKICAgICYuYWN0aXZlCiAgICAgIGNvbG9yIHZhcigtLWFjY2VudC1jb2xvcikKCiAgLm5hdi1pdGVtCiAgICBwb3NpdGlvbiByZWxhdGl2ZQogICAgZGlzcGxheSBpbmxpbmUtYmxvY2sKICAgIG1hcmdpbi1sZWZ0IDEuNXJlbQogICAgbGluZS1oZWlnaHQgMnJlbQoKICAgICY6Zmlyc3QtY2hpbGQKICAgICAgbWFyZ2luLWxlZnQgMAoKICAucmVwby1saW5rCiAgICBjb2xvciB2YXIoLS1kYXJrLWdyZXkpCiAgICBtYXJnaW4tbGVmdCAxLjVyZW0KCkBtZWRpYSAobWF4LXdpZHRoOiAkTVFNb2JpbGUpCiAgLm5hdi1saW5rcwogICAgLm5hdi1saW5rCiAgICAgICY6aG92ZXIsICYuYWN0aXZlCiAgICAgICAgY29sb3IgdmFyKC0tYWNjZW50LWNvbG9yKQoKICAgIC5uYXYtaXRlbSwgLnJlcG8tbGluawogICAgICBtYXJnaW4tbGVmdCAwCgpAbWVkaWEgKG1pbi13aWR0aDogJE1RTW9iaWxlKQogIC5uYXYtaXRlbSA+IC5uYXYtbGluawogICAgJjpob3ZlciwgJi5hY3RpdmUKICAgICAgbWFyZ2luLWJvdHRvbSAtMnB4CiAgICAgIGJvcmRlci1ib3R0b20gMnB4IHNvbGlkIHZhcigtLWFjY2VudC1jb2xvci1sMTApCgogICAgJi5hY3RpdmUKICAgICAgY29sb3IgdmFyKC0tYWNjZW50LWNvbG9yKQo="},{"version":3,"sources":["NavLinks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"NavLinks.vue","sourceRoot":"node_modules/vuepress-theme-hope/components","sourcesContent":["<template>\n  <nav v-if=\"userLinks.length || repoLink\" class=\"nav-links\">\n    <!-- user links -->\n    <div v-for=\"item in userLinks\" :key=\"item.link\" class=\"nav-item\">\n      <DropdownLink v-if=\"item.type === 'links'\" :item=\"item\" />\n      <NavLink v-else :item=\"item\" />\n    </div>\n\n    <!-- repo link -->\n    <a\n      v-if=\"repoLink && $themeConfig.repoDisplay !== false\"\n      class=\"repo-link\"\n      rel=\"noopener noreferrer\"\n      :href=\"repoLink\"\n      target=\"_blank\"\n    >\n      {{ repoLabel }}\n      <OutboundLink />\n    </a>\n  </nav>\n</template>\n\n<script lang='ts'>\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport DropdownLink from \"@theme/components/DropdownLink.vue\";\nimport NavLink from \"@theme/components/NavLink.vue\";\nimport { RouterOptions } from \"vue-router\";\nimport { resolveNavLinkItem } from \"../util/navbar\";\n\n@Component({ components: { NavLink, DropdownLink } })\nexport default class NavLinks extends Vue {\n  private get userNav() {\n    return this.$themeLocaleConfig.nav || this.$themeConfig.nav || [];\n  }\n\n  private get nav() {\n    const { locales } = this.$site;\n\n    if (locales && Object.keys(locales).length > 1) {\n      const currentLink = this.$page.path;\n      const { routes } = (this.$router as any).options as RouterOptions;\n      const themeLocales = this.$themeConfig.locales || {};\n      const languageDropdown = {\n        text: this.$themeLocaleConfig.selectText || \"Languages\",\n        ariaLabel: this.$themeLocaleConfig.ariaLabel || \"Select language\",\n        items: Object.keys(locales).map((path) => {\n          const locale = locales[path];\n          const text =\n            (themeLocales[path] && themeLocales[path].label) || locale.lang;\n          let link: string;\n\n          // Stay on the current page\n          if (locale.lang === this.$lang) link = currentLink;\n          else {\n            // Try to stay on the same page\n            link = currentLink.replace(this.$localeConfig.path as string, path);\n            // Fallback to homepage\n            if (!(routes || []).some((route) => route.path === link))\n              link = path;\n          }\n\n          return { text, link };\n        }),\n      };\n\n      return [...this.userNav, languageDropdown];\n    }\n\n    return this.userNav;\n  }\n\n  private get userLinks() {\n    return (this.nav || []).map((link: any) => resolveNavLinkItem(link));\n  }\n\n  private get repoLink() {\n    const { repo } = this.$themeConfig;\n\n    if (repo)\n      return /^https?:/u.test(repo) ? repo : `https://github.com/${repo}`;\n\n    return \"\";\n  }\n\n  private get repoLabel() {\n    if (!this.repoLink) return \"\";\n    if (this.$themeConfig.repoLabel) return this.$themeConfig.repoLabel;\n\n    const [repoHost] = this.repoLink.match(/^https?:\\/\\/[^/]+/u) || [\"\"];\n    const platforms = [\"GitHub\", \"GitLab\", \"Bitbucket\"];\n\n    for (let index = 0; index < platforms.length; index++) {\n      const platform = platforms[index];\n\n      if (new RegExp(platform, \"iu\").test(repoHost)) return platform;\n    }\n\n    return \"Source\";\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.nav-links\n  display inline-block\n\n  .nav-link\n    line-height 1.4rem\n    color var(--dark-grey)\n\n    &.active\n      color var(--accent-color)\n\n  .nav-item\n    position relative\n    display inline-block\n    margin-left 1.5rem\n    line-height 2rem\n\n    &:first-child\n      margin-left 0\n\n  .repo-link\n    color var(--dark-grey)\n    margin-left 1.5rem\n\n@media (max-width: $MQMobile)\n  .nav-links\n    .nav-link\n      &:hover, &.active\n        color var(--accent-color)\n\n    .nav-item, .repo-link\n      margin-left 0\n\n@media (min-width: $MQMobile)\n  .nav-item > .nav-link\n    &:hover, &.active\n      margin-bottom -2px\n      border-bottom 2px solid var(--accent-color-l10)\n\n    &.active\n      color var(--accent-color)\n</style>\n"]}]}