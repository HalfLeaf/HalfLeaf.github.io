{"remainingRequest":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\@mr-hope\\vuepress-plugin-components\\src\\BreadCrumb.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\@mr-hope\\vuepress-plugin-components\\src\\BreadCrumb.vue","mtime":499162500000},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\css-loader\\dist\\cjs.js","mtime":1592788458817},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1592788498960},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\postcss-loader\\src\\index.js","mtime":1592788480096},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\stylus-loader\\index.js","mtime":1592788491948},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592788438647},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1592788498951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQHJlcXVpcmUgJ35AbXItaG9wZS92dWVwcmVzcy1zaGFyZWQtdXRpbHMvc3R5bGVzL3dyYXBwZXIuc3R5bCcKCi8vIEZpeCB0b3AgYm9hcmRlciBvZiBoZWFkaW5nMQoudGhlbWUtZGVmYXVsdC1jb250ZW50Om5vdCguY3VzdG9tKQogID4gKjpmaXJzdC1jaGlsZAogICAgbWFyZ2luLXRvcCAwCgpoMSwgaDIsIGgzLCBoNCwgaDUsIGg2CiAgLnRoZW1lLWRlZmF1bHQtY29udGVudDpub3QoLmN1c3RvbSkgJjpmaXJzdC1jaGlsZAogICAgbWFyZ2luLXRvcCAwLjVyZW0gLSAkbmF2YmFySGVpZ2h0ICFpbXBvcnRhbnQKICAgIHBhZGRpbmctdG9wICRuYXZiYXJIZWlnaHQgKyAxcmVtICFpbXBvcnRhbnQKCi5icmVhZGNydW1iCiAgQGV4dGVuZCAkd3JhcHBlcgogIHBvc2l0aW9uIHJlbGF0aXZlCiAgei1pbmRleCAyCiAgZm9udC1zaXplIDE1cHgKICB3aGl0ZS1zcGFjZSBub3dyYXAKICBtYXJnaW4tdG9wICRuYXZiYXJIZWlnaHQKICBwYWRkaW5nLXRvcCAwLjJyZW0KICBtYXJnaW4tYm90dG9tIC0gJG5hdmJhckhlaWdodAogIHBhZGRpbmctYm90dG9tIDAuMnJlbQoKICBAbWVkaWEgKG1heC13aWR0aDogJE1RTmFycm93KQogICAgZm9udC1zaXplIDE0cHgKCiAgQG1lZGlhIChtYXgtd2lkdGg6ICRNUU1vYmlsZU5hcnJvdykKICAgIGZvbnQtc2l6ZSAxMi44cHgKCiAgLy8gYnJlYWRjcnVtYiBpcyBkaXNhYmxlZAogICYuZGlzYWJsZQogICAgcGFkZGluZy1ib3R0b20gMS4zZW0KCiAgLmljb25mb250CiAgICBmb250LXNpemUgaW5oZXJpdAoKICAgICY6YmVmb3JlCiAgICAgIGxpbmUtaGVpZ2h0IDEKICAgICAgdmVydGljYWwtYWxpZ24gbWlkZGxlCiAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrCgogIHVsCiAgICBsaXN0LXN0eWxlIG5vbmUKICAgIHBhZGRpbmctbGVmdCAwcHgKICAgIGFsaWduLWl0ZW1zIGZsZXgtc3RhcnQKICAgIGRpc3BsYXkgZmxleAogICAgZmxleC13cmFwIHdyYXAKICAgIGp1c3RpZnktY29udGVudCBmbGV4LXN0YXJ0CgogICAgbGkKICAgICAgYWxpZ24taXRlbXMgY2VudGVyCiAgICAgIGRpc3BsYXkgZmxleAoKICAgICAgJjpmaXJzdC1jaGlsZCBhCiAgICAgICAgcGFkZGluZy1sZWZ0IDAKCiAgICAgICY6bGFzdC1jaGlsZCBhCiAgICAgICAgcGFkZGluZy1yaWdodCAwCgogICAgICAmLmlzLWFjdGl2ZSBhCiAgICAgICAgY29sb3IgdmFyKC0tbGlnaHQtZ3JleSwgIzk5OSkKICAgICAgICBjdXJzb3IgZGVmYXVsdAogICAgICAgIHBvaW50ZXItZXZlbnRzIG5vbmUKCiAgICAgIGEKICAgICAgICBwYWRkaW5nIDAgMC41ZW0KCiAgICAgICAgJjpiZWZvcmUKICAgICAgICAgIG1hcmdpbi1yaWdodCAwLjI1ZW0KCiAgICAgICAgJjpob3ZlcgogICAgICAgICAgY3Vyc29yIHBvaW50ZXIKICAgICAgICAgIHRleHQtZGVjb3JhdGlvbiB1bmRlcmxpbmUKCiAgICBsaStsaTo6YmVmb3JlCiAgICAgIGNvbG9yIHZhcigtLWxpZ2h0LWdyZXksICM5OTkpCiAgICAgIGNvbnRlbnQgJ1wwMDAyZicK"},{"version":3,"sources":["BreadCrumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"BreadCrumb.vue","sourceRoot":"node_modules/@mr-hope/vuepress-plugin-components/src","sourcesContent":["<template>\n  <nav :class=\"['breadcrumb',{ disable: !enable }]\">\n    <ul v-if=\"enable\">\n      <li\n        v-for=\"(item,index) in config\"\n        :key=\"item.url\"\n        :class=\"{'is-active': config.length -1 === index}\"\n      >\n        <a\n          class=\"iconfont\"\n          :class=\"item.icon && iconEnable? `${iconPrefix}${item.icon}`:''\"\n          @click=\"$router.push(item.url)\"\n          v-text=\"item.title\"\n        />\n      </li>\n    </ul>\n  </nav>\n</template>\n\n<script lang='ts'>\nimport { Component, Prop, Vue, Watch } from \"vue-property-decorator\";\nimport { Route } from \"vue-router\";\n\ninterface BreadCrumbConfig {\n  title: string;\n  icon?: string;\n  url: string;\n}\n\n@Component\nexport default class BreadCrumb extends Vue {\n  private get enable(): boolean {\n    const globalEnable = this.$themeConfig.breadcrumb !== false;\n    const pageEnable = this.$page.frontmatter.breadcrumb;\n\n    return (\n      ((globalEnable && pageEnable !== false) || pageEnable === true) &&\n      this.config.length > 1\n    );\n  }\n\n  private get iconEnable(): boolean {\n    const globalEnable = this.$themeConfig.breadcrumbIcon !== false;\n    const pageEnable = this.$page.frontmatter.breadcrumbIcon;\n\n    return (\n      this.enable &&\n      ((globalEnable && pageEnable !== false) || pageEnable === true)\n    );\n  }\n\n  private get iconPrefix(): string {\n    const { iconPrefix } = this.$themeConfig;\n\n    return iconPrefix === \"\" ? \"\" : iconPrefix || \"icon-\";\n  }\n\n  private get config(): BreadCrumbConfig[] {\n    const breadcrumbConfig: BreadCrumbConfig[] = [];\n    const { pages } = this.$site;\n    const links = this.getLinks(this.$route);\n\n    // generate breadcrumb config\n    for (let index = 1; index < links.length; index++)\n      for (let index2 = 0; index2 < pages.length; index2++) {\n        const element = pages[index2];\n\n        if (element.path === links[index]) {\n          breadcrumbConfig.push({\n            title: element.title,\n            icon: element.frontmatter.icon,\n            url: element.path,\n          });\n          break;\n        }\n      }\n\n    return breadcrumbConfig;\n  }\n\n  private getLinks(route: Route) {\n    const routePaths = route.fullPath.split(\"#\")[0].split(\"/\");\n    const links: string[] = [];\n    let link = \"\";\n\n    // generate links\n    routePaths.forEach((element, index) => {\n      if (index !== routePaths.length - 1) {\n        link += `${element}/`;\n        links.push(link);\n      } else if (element !== \"\") {\n        link += element;\n        links.push(link);\n      }\n    });\n\n    return links;\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@require '~@mr-hope/vuepress-shared-utils/styles/wrapper.styl'\n\n// Fix top boarder of heading1\n.theme-default-content:not(.custom)\n  > *:first-child\n    margin-top 0\n\nh1, h2, h3, h4, h5, h6\n  .theme-default-content:not(.custom) &:first-child\n    margin-top 0.5rem - $navbarHeight !important\n    padding-top $navbarHeight + 1rem !important\n\n.breadcrumb\n  @extend $wrapper\n  position relative\n  z-index 2\n  font-size 15px\n  white-space nowrap\n  margin-top $navbarHeight\n  padding-top 0.2rem\n  margin-bottom - $navbarHeight\n  padding-bottom 0.2rem\n\n  @media (max-width: $MQNarrow)\n    font-size 14px\n\n  @media (max-width: $MQMobileNarrow)\n    font-size 12.8px\n\n  // breadcrumb is disabled\n  &.disable\n    padding-bottom 1.3em\n\n  .iconfont\n    font-size inherit\n\n    &:before\n      line-height 1\n      vertical-align middle\n      display inline-block\n\n  ul\n    list-style none\n    padding-left 0px\n    align-items flex-start\n    display flex\n    flex-wrap wrap\n    justify-content flex-start\n\n    li\n      align-items center\n      display flex\n\n      &:first-child a\n        padding-left 0\n\n      &:last-child a\n        padding-right 0\n\n      &.is-active a\n        color var(--light-grey, #999)\n        cursor default\n        pointer-events none\n\n      a\n        padding 0 0.5em\n\n        &:before\n          margin-right 0.25em\n\n        &:hover\n          cursor pointer\n          text-decoration underline\n\n    li+li::before\n      color var(--light-grey, #999)\n      content '\\0002f'\n</style>\n"]}]}