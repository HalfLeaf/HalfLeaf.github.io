{"remainingRequest":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-theme-hope\\components\\Common.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-theme-hope\\components\\Common.vue","mtime":499162500000},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\css-loader\\dist\\cjs.js","mtime":1592788458817},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1592788498960},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\postcss-loader\\src\\index.js","mtime":1592788480096},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\stylus-loader\\index.js","mtime":1592788491948},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592788438647},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1592788498951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zaWRlYmFyLW1hc2sKICBwb3NpdGlvbiBmaXhlZAogIHotaW5kZXggOQogIHRvcCAwCiAgbGVmdCAwCiAgd2lkdGggMTAwdncKICBoZWlnaHQgMTAwdmgKICBkaXNwbGF5IG5vbmUKCiAgLnRoZW1lLWNvbnRhaW5lci5zaWRlYmFyLW9wZW4gJgogICAgZGlzcGxheSBibG9jawo="},{"version":3,"sources":["Common.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Common.vue","sourceRoot":"node_modules/vuepress-theme-hope/components","sourcesContent":["<template>\n  <div\n    :class=\"pageClasses\"\n    class=\"theme-container\"\n    @touchend=\"onTouchEnd\"\n    @touchstart=\"onTouchStart\"\n  >\n    <!-- 密码弹窗 -->\n    <Password v-if=\"globalEncrypted\" @enter=\"globalPasswordCheck\" />\n    <!-- 内容 -->\n    <template v-else>\n      <Navbar v-if=\"showNavbar\" @toggle-sidebar=\"toggleSidebar\" />\n\n      <div class=\"sidebar-mask\" @click=\"toggleSidebar(false)\" />\n\n      <Sidebar :items=\"sidebarItems\" @toggle-sidebar=\"toggleSidebar\">\n        <template #top>\n          <slot name=\"sidebar-top\" />\n        </template>\n        <template #center>\n          <slot name=\"sidebar-center\" />\n        </template>\n        <template #bottom>\n          <slot name=\"sidebar-bottom\" />\n        </template>\n      </Sidebar>\n\n      <slot :sidebar-items=\"sidebarItems\" :headers=\"headers\" />\n    </template>\n  </div>\n</template>\n\n<script lang='ts'>\nimport { Component, Mixins, Prop, Vue } from \"vue-property-decorator\";\nimport {\n  SidebarItem,\n  SidebarGroupItem,\n  SidebarHeader,\n  resolveSidebarItems,\n} from \"../util/sidebar\";\nimport GlobalEncryptMixin from \"../util/globalEncryptMixin\";\nimport Navbar from \"@theme/components/Navbar.vue\";\nimport Password from \"@theme/components/Password.vue\";\nimport { PageHeader } from \"@mr-hope/vuepress-types\";\nimport Sidebar from \"@theme/components/Sidebar.vue\";\n\n@Component({ components: { Password, Sidebar, Navbar } })\nexport default class Common extends Mixins(GlobalEncryptMixin) {\n  @Prop({ type: Boolean, default: true })\n  private readonly navbar!: boolean;\n\n  @Prop({ type: Boolean, default: true })\n  private readonly sidebar!: boolean;\n\n  private isSidebarOpen = false;\n\n  private touchStart: { clientX: number; clientY: number } = {\n    clientX: 0,\n    clientY: 0,\n  };\n\n  /** 是否应该展示导航栏 */\n  private get showNavbar(): boolean {\n    if (this.navbar === false) return false;\n\n    const { frontmatter } = this.$page;\n\n    if (frontmatter.navbar === false || this.$themeConfig.navbar === false)\n      return false;\n\n    return Boolean(\n      this.$title ||\n        this.$themeConfig.logo ||\n        this.$themeConfig.repo ||\n        this.$themeConfig.nav ||\n        this.$themeLocaleConfig.nav\n    );\n  }\n\n  /** 是否应该展示侧边栏 */\n  private get showSidebar(): boolean {\n    if (this.sidebar === false) return false;\n\n    return (\n      !this.$frontmatter.home &&\n      this.$frontmatter.sidebar !== false &&\n      this.sidebarItems.length !== 0\n    );\n  }\n\n  /** 侧边栏内容 */\n  private get sidebarItems(): SidebarItem[] {\n    if (this.sidebar === false) return [];\n\n    return resolveSidebarItems(this.$page, this.$site, this.$localePath);\n  }\n\n  /** 页面 Class */\n  private get pageClasses(): any {\n    const userPageClass = this.$page.frontmatter.pageClass;\n\n    return [\n      {\n        \"no-navbar\": !this.showNavbar,\n        \"sidebar-open\": this.isSidebarOpen,\n        \"no-sidebar\": !this.showSidebar,\n        \"has-anchor\": this.showAnchor,\n      },\n      userPageClass,\n    ];\n  }\n\n  private get headers() {\n    return this.getHeader(this.sidebarItems);\n  }\n\n  private get showAnchor() {\n    return this.$themeConfig.anchorDisplay !== false && this.headers.length > 0;\n  }\n\n  protected mounted(): void {\n    this.$router.afterEach(() => {\n      this.isSidebarOpen = false;\n    });\n  }\n\n  private toggleSidebar(to: any): void {\n    this.isSidebarOpen = typeof to === \"boolean\" ? to : !this.isSidebarOpen;\n    this.$emit(\"toggle-sidebar\", this.isSidebarOpen);\n  }\n\n  // Side swipe\n  private onTouchStart(event: TouchEvent): void {\n    this.touchStart = {\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY,\n    };\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    const dx = event.changedTouches[0].clientX - this.touchStart.clientX;\n    const dy = event.changedTouches[0].clientY - this.touchStart.clientY;\n\n    if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40)\n      if (dx > 0 && this.touchStart.clientX <= 80) this.toggleSidebar(true);\n      else this.toggleSidebar(false);\n  }\n\n  private getHeader(items: SidebarItem[]): SidebarHeader[] {\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n\n      if (item.type === \"group\") {\n        const matching: PageHeader[] = this.getHeader(\n          (item as SidebarGroupItem).children\n        );\n\n        if (matching.length !== 0) return matching;\n      } else if (\n        item.type === \"page\" &&\n        item.headers &&\n        item.path === this.$route.path\n      )\n        return item.headers;\n    }\n\n    return [];\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.sidebar-mask\n  position fixed\n  z-index 9\n  top 0\n  left 0\n  width 100vw\n  height 100vh\n  display none\n\n  .theme-container.sidebar-open &\n    display block\n</style>\n"]}]}