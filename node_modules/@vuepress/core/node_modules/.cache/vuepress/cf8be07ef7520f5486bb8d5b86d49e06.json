{"remainingRequest":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-plugin-md-enhance\\src\\FlowChart.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vuepress-plugin-md-enhance\\src\\FlowChart.vue","mtime":499162500000},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\css-loader\\dist\\cjs.js","mtime":1592788458817},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1592788498960},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\postcss-loader\\src\\index.js","mtime":1592788480096},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\stylus-loader\\index.js","mtime":1592788491948},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592788438647},{"path":"E:\\myself\\githubPage\\HalfLeaf.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1592788498951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWQtZmxvd2NoYXJ0CiAgb3ZlcmZsb3cteCBzY3JvbGwKICB0ZXh0LWFsaWduIGNlbnRlcgogIHRyYW5zaXRpb24gYWxsIDFzCiAgcGFkZGluZyAwLjZlbSAwLjRlbQoKICAmLmxvYWRpbmcKICAgIGRpc3BsYXkgZmxleAogICAganVzdGlmeS1jb250ZW50IGNlbnRlcgogICAgYWxpZ24taXRlbXMgY2VudGVyCiAgICBiYWNrZ3JvdW5kLWNvbG9yIHZhcigtLWdyZXkxNSwgI2VlZSkKCiAgQG1lZGlhIChtYXgtd2lkdGg6ICRNUU1vYmlsZU5hcnJvdykKICAgIG1hcmdpbiAwIC0xLjVyZW0KICAgIHBhZGRpbmcgMC42ZW0gMAoKICBzdmcubWQtZmxvd2NoYXJ0LWxvYWRpbmctaWNvbgogICAgd2lkdGggMi41ZW0KICAgIGhlaWdodCAyLjVlbQogICAgbWFyZ2luIDIuNWVtIGF1dG8KICAgIGZpbGwgdmFyKC0tYWNjZW50LWNvbG9yLCAkYWNjZW50Q29sb3IpCgoub3BlcmF0aW9uLWVsZW1lbnQsIC5wYXJhbGxlbC1lbGVtZW50CiAgcnggNXB4CiAgcnkgNXB4Cg=="},{"version":3,"sources":["FlowChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"FlowChart.vue","sourceRoot":"node_modules/vuepress-plugin-md-enhance/src","sourcesContent":["<template>\n  <div :class=\"{ 'loading': loading }\" class=\"md-flowchart\">\n    <Loading v-if=\"loading\" class=\"md-flowchart-loading-icon\" />\n  </div>\n</template>\n\n<script lang='ts'>\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport Loading from \"@mr-hope/vuepress-shared-utils/icons/LoadingIcon.vue\";\nimport debounce = require(\"lodash.debounce\");\nimport presets from \"./presets\";\n\nlet svg: any;\n\n@Component({ components: { Loading } })\nexport default class FlowChart extends Vue {\n  @Prop({ type: String, required: true })\n  private readonly id!: string;\n\n  @Prop({ type: String, required: true })\n  private readonly code!: string;\n\n  @Prop({ type: String, default: \"vue\" })\n  private readonly preset!: \"ant\" | \"vue\";\n\n  private loading = true;\n\n  private scale = 1;\n\n  private get $preset() {\n    const preset = presets[this.preset];\n\n    if (!preset) {\n      console.warn(`[md-enhance:flowchart] Unknown preset: ${this.preset}`);\n      return presets.vue;\n    }\n\n    return preset;\n  }\n\n  private get resize() {\n    return debounce(() => {\n      const scale = this.getScale(window.innerWidth);\n\n      if (this.scale !== scale) {\n        this.scale = scale;\n        svg.drawSVG(this.id, { ...this.$preset, scale });\n      }\n    }, 100);\n  }\n\n  private mounted() {\n    const delay = () => new Promise((resolve) => setTimeout(resolve, 500));\n\n    this.$el.setAttribute(\"id\", this.id);\n\n    Promise.all([\n      import(/* webpackChunkName: \"flowchart\" */ \"flowchart.js\"),\n      delay(),\n    ]).then(([flowchart]) => {\n      const { parse } = flowchart;\n\n      svg = parse(this.code);\n      this.scale = this.getScale(window.innerWidth);\n\n      svg.drawSVG(this.id, { ...this.$preset, scale: this.scale });\n      this.loading = false;\n\n      window.addEventListener(\"resize\", this.resize);\n    });\n  }\n\n  private beforeDestory() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  private getScale(width: number) {\n    return width < 419 ? 0.8 : width > 1280 ? 1 : 0.9;\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.md-flowchart\n  overflow-x scroll\n  text-align center\n  transition all 1s\n  padding 0.6em 0.4em\n\n  &.loading\n    display flex\n    justify-content center\n    align-items center\n    background-color var(--grey15, #eee)\n\n  @media (max-width: $MQMobileNarrow)\n    margin 0 -1.5rem\n    padding 0.6em 0\n\n  svg.md-flowchart-loading-icon\n    width 2.5em\n    height 2.5em\n    margin 2.5em auto\n    fill var(--accent-color, $accentColor)\n\n.operation-element, .parallel-element\n  rx 5px\n  ry 5px\n</style>\n"]}]}