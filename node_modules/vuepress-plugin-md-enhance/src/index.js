"use strict";
const flowchart_1 = require("./markdown-it/flowchart");
const footnote_1 = require("./markdown-it/footnote");
const lineNumbers = require("@vuepress/markdown/lib/lineNumbers");
const katex_1 = require("./markdown-it/katex");
const mark_1 = require("./markdown-it/mark");
const pluginConfig_1 = require("./pluginConfig");
const path_1 = require("path");
const sub_1 = require("./markdown-it/sub");
const sup_1 = require("./markdown-it/sup");
module.exports = (option, context) => {
    const markdownOption = Object.keys(option).length === 0
        ? context.themeConfig.markdown || {}
        : option;
    const config = {
        name: "md-enhance",
        enhanceAppFiles: path_1.resolve(__dirname, "enhanceAppFile.ts"),
        chainMarkdown: (md) => {
            if (markdownOption.lineNumbers !== false)
                md.plugin("line-numbers").use(lineNumbers);
            if (markdownOption.sup || markdownOption.enableAll)
                md.plugin("sup").use(sup_1.default);
            if (markdownOption.sub || markdownOption.enableAll)
                md.plugin("sub").use(sub_1.default);
            if (markdownOption.footnote || markdownOption.enableAll)
                md.plugin("footnote").use(footnote_1.default);
            if (markdownOption.mark || markdownOption.enableAll)
                md.plugin("mark").use(mark_1.default);
            if (markdownOption.flowchart || markdownOption.enableAll)
                md.plugin("flowchart").use(flowchart_1.default);
            if (markdownOption.tex || markdownOption.enableAll)
                md.plugin("katex").use(katex_1.default, [
                    {
                        macros: {
                            // support more symbols
                            "\\liiiint": "\\int\\!\\!\\!\\iiint",
                            "\\iiiint": "\\int\\!\\!\\!\\!\\iiint",
                            "\\idotsint": "\\int\\!\\cdots\\!\\int",
                        },
                    },
                ]);
        },
    };
    config.plugins = pluginConfig_1.default(markdownOption, context.themeConfig);
    return config;
};
