"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/* global IMAGE_SELECTOR, PHOTOSWIPE_OPTIONS */
const vue_property_decorator_1 = require("vue-property-decorator");
const PhotoSwipe = require("photoswipe");
const PhotoSwipeUIDefault = require("photoswipe/dist/photoswipe-ui-default");
let images;
let PhotoSwipeUI = /** @class */ (() => {
    let PhotoSwipeUI = class PhotoSwipeUI extends vue_property_decorator_1.Vue {
        photoswipe() {
            const pswp = document.querySelector(".pswp");
            this.getImages().then((imageConfig) => {
                images.forEach((image, index) => {
                    image.onclick = () => {
                        const gallery = new PhotoSwipe(pswp, PhotoSwipeUIDefault, imageConfig, Object.assign(Object.assign({}, PHOTOSWIPE_OPTIONS), { index }));
                        gallery.init();
                    };
                });
            });
        }
        getImageInfo(image) {
            return {
                src: image.src,
                // eslint-disable-next-line id-length
                w: image.naturalWidth,
                // eslint-disable-next-line id-length
                h: image.naturalHeight,
                title: image.alt,
            };
        }
        getImages() {
            const promises = [];
            images = document.querySelectorAll(IMAGE_SELECTOR);
            images.forEach((image, index) => {
                promises[index] = new Promise((resolve, reject) => {
                    if (image.complete)
                        resolve(this.getImageInfo(image));
                    else {
                        image.onload = () => resolve(this.getImageInfo(image));
                        image.onerror = (err) => reject(err);
                    }
                });
            });
            return Promise.all(promises);
        }
        mounted() {
            const timer = setInterval(() => {
                const content = document.querySelector(".theme-default-content");
                if (content) {
                    this.photoswipe();
                    clearInterval(timer);
                }
            }, 200);
        }
        onRouteChange() {
            const timer = setInterval(() => {
                const content = document.querySelector(".theme-default-content");
                if (content) {
                    this.photoswipe();
                    clearInterval(timer);
                }
            }, 200);
        }
    };
    __decorate([
        vue_property_decorator_1.Watch("$route")
    ], PhotoSwipeUI.prototype, "onRouteChange", null);
    PhotoSwipeUI = __decorate([
        vue_property_decorator_1.Component
    ], PhotoSwipeUI);
    return PhotoSwipeUI;
})();
exports.default = PhotoSwipeUI;
